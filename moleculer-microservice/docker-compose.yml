version: "3.3"

services:
  api:
    build:
      context: .
    image: new-service
    env_file: docker-compose.env
    environment:
      SERVICES: api
      PORT: 3000
    depends_on:
      - nats
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api-gw.rule=PathPrefix(`/`)"
      - "traefik.http.services.api-gw.loadbalancer.server.port=3000"
    networks:
      - internal

  authentication:
    build:
      context: .
    image: new-service
    env_file: docker-compose.env
    environment:
      SERVICES: authentication
    depends_on:
      - mongo
      - nats
      - redis
      - elasticsearch
    links:
      - redis
    networks:
      - internal

  products:
      build:
        context: .
      image: new-service
      env_file: docker-compose.env
      environment:
        SERVICES: products
      depends_on:
        - mongo
        - nats
        - redis
      links:
        - redis
      networks:
        - internal

  mongo:
    image: mongo:4
    volumes:
      - data:/data/db
    networks:
      - internal

  nats:
    image: nats:2
    networks:
      - internal
  redis:
    image: redis
    networks:
      - internal

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.5.2
    container_name: elasticsearch
    environment:
      - cluster.name=docker-cluster
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 262144
        hard: 262144
    volumes:
      - dataES:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - internal
  kibana:
    image: "docker.elastic.co/kibana/kibana:7.5.2"
    container_name: kibana
    environment:
      SERVER_NAME: kibana.local
      ELASTICSEARCH_URL: http://elasticsearch:9200
    ports:
      - "5601:5601"
    networks:
      - internal

  traefik:
    image: traefik:v2.1
    command:
      - "--api.insecure=true" # Don't do that in production!
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
    ports:
      - 3000:80
      - 3001:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - internal
      - default

networks:
  internal:

volumes:
  data:
  dataES:
    driver: local
